# Importing the dataset
dataset = read.csv('Salary_Data.csv')
ibrary(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
clearPushBack()
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
install.packages("ggplot2")
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
regressor
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Importing the dataset
dataset = read.csv('50_Startups.csv')
setwd("C:/Users/BIO/Desktop/LeoWork/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression/Multiple_Linear_Regression")
setwd("C:/Users/BIO/Desktop/LeoWork/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression/Multiple_Linear_Regression")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
regressor
y_pred = predict(regressor, newdata = test_set)
y_pred
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
colnames(data)[colnames(data)=="R.D.Spend"] <- "Q.Spend"
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
View(dataset)
View(dataset)
write.csv(dataset, "50_Startups.csv")
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
write.csv(dataset, "50_Startups.csv")
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
write.csv(dataset, "50_Startups.csv")
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
View(dataset)
View(dataset)
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
View(dataset)
View(dataset)
write.csv2(dataset, file="50_Startups.csv")
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
View(dataset)
View(dataset)
write.csv2(dataset, "50_Startups.csv")
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
write.csv(dataset, "50_Startups.csv")
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
colnames(dataset)[colnames(dataset)=="R.D.Spend"] <- "Q.Spend"
write.csv(dataset, "50_Startups_c5.csv")
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
install.packages("dplyr")
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
View(dataset)
View(dataset)
#Eliminar una columna
library(dplyr)
dataset <- select(dataset, -X)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
#Eliminar una columna
library(dplyr)
dataset <- select(dataset, -X)
View(dataset)
View(dataset)
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Datos")
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Datos")
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
#Eliminar una columna
library(dplyr)
dataset <- select(dataset, -X)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Datos")
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
#Eliminar una columna
library(dplyr)
dataset <- select(dataset, -X)
View(dataset)
View(dataset)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Datos")
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
#Eliminar una columna
library(dplyr)
dataset <- select(dataset, -X)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Datos")
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Regresion/1_Regresion_Simple")
# Simple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Regresion/1_Regresion_Simple")
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
# Simple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Regresion/1_Regresion_Simple")
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Regresion/2_Regresion_Multiple")
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Regresion/2_Regresion_Multiple")
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
#Eliminar una columna
library(dplyr)
dataset <- select(dataset, -X)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
summary(regressor)
# Multiple Linear Regression
setwd("C:/Users/BIO/Desktop/LeoWork/Curso_Esp_Calidad_ICESI/Clase_Datos")
# Importing the dataset
dataset = read.csv('50_Startups_c5.csv')
#Eliminar una columna
library(dplyr)
dataset <- select(dataset, -X)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
